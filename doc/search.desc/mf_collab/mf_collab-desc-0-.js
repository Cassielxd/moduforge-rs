searchState.loadedDescShard("mf_collab", 0, "Contains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n房间已创建但未初始化数据\n房间已初始化并有数据\n房间不存在\n房间已下线\n房间信息结构\n房间状态枚举\n房间正在下线中\n强制房间下线（用于紧急情况）\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n获取所有活跃房间列表\n获取房间详细信息\n获取房间状态信息\n获取房间统计信息\n初始化房间，确保 Yrs 文档存在\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n检查房间是否已初始化（有数据）\n房间下线 - 核心下线方法\n批量下线房间\n获取 YrsManager 的引用（用于高级操作）\nStep操作结果 - …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nYrsManager …\n自定义错误类型用于房间不存在的情况\n强制房间下线 - 紧急情况使用\nReturns the argument unchanged.\nReturns the argument unchanged.\n获取所有活跃房间列表\n获取房间统计信息\n自定义错误处理器\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n下线空房间（没有客户端连接的房间）\n下线长时间未活动的房间\n房间下线 - 优雅关闭房间\n批量下线房间\n根据条件下线房间 …\n服务器完全关闭 - 下线所有房间\n启动 WebSocket 服务器\n获取 SyncService 的引用，用于外部操作\n使用现有的 SyncService 创建服务器\n强制清理房间资源（即使有客户端连接） …\nReturns the argument unchanged.\n获取所有活跃房间的ID列表\n获取给定房间的 awareness 引用，如果存在的话\n获取或创建房间的 Awareness 引用\nCalls <code>U::from(self)</code>.\n移除房间并清理相关资源 …\n批量清理多个房间\n获取房间数量\n检查房间是否存在\n清理所有房间（服务器关闭时使用）")